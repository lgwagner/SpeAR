/*
 * generated by Xtext
 */
package com.rockwellcollins.ui.quickfix;

import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;

import com.rockwellcollins.validation.SpearJavaValidator;

/**
 * Custom quickfixes.
 *
 * See
 * https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#quick-fixes
 */
public class SpearQuickfixProvider extends org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider {

	@Fix(SpearJavaValidator.INVALID_ASSUMPTION_REF)
	public void provideInputIds(final Issue issue, IssueResolutionAcceptor acceptor) {
		for (String replacement : issue.getData()) {
			acceptor.accept(issue, "Change to " + replacement, null, null, new IModification() {
				@Override
				public void apply(IModificationContext context) throws Exception {
					IXtextDocument xtextDocument = context.getXtextDocument();
					xtextDocument.replace(issue.getOffset(), issue.getLength(), replacement);
				}
			});
		}
	}

	@Fix(SpearJavaValidator.MISMATCHED_FILENAME)
	public void provideBaseFilename(final Issue issue, IssueResolutionAcceptor acceptor) {
		for (String replacement : issue.getData()) {
			acceptor.accept(issue, "Change to " + replacement, null, null, new IModification() {
				@Override
				public void apply(IModificationContext context) throws Exception {
					IXtextDocument xtextDocument = context.getXtextDocument();
					xtextDocument.replace(issue.getOffset(), issue.getLength(), replacement);
				}
			});
		}
	}

}
