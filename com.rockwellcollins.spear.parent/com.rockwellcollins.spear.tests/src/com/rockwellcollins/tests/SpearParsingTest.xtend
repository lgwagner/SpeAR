/*
 * Information: Initially generated by Xtext 2.18.0.M3
 */
package com.rockwellcollins.tests

import com.google.inject.Inject
import com.rockwellcollins.spear.File
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(SpearInjectorProvider)
class SpearParsingTest {
	@Inject
	ParseHelper<File> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
Specification division

Types:

Inputs:
	a : int
	b : int

	d : real
	e : real

Outputs:
	x : int
	y : real

Assumptions:
	a0: a > 0 and b > 0
	a1: d > 0.0 and e > 0.0

DerivedRequirements:
	r0: x == a / b
	r1: y == d / e

Requirements:
	dr0: x > 0
	dr1: y > 0.0
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: errors.join(", ")''')
	}
}
