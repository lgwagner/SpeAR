Specification record_scoping

Imports:
	import "scoping_definitions.spear"

Types:
	record_type1 : record {a : int,  b : int}
	record_type2 : record {a : real, b : real}
	
	enum1 : enum {A,B,C}
	enum2 : enum {D,E,F}
	
Inputs:
	a : record_type1
	b : record_type2
	c : enum1
	d : enum2
	
	t : recordA

Outputs:
	x : int
	y : real

State:
	q : int
	r : real

Macros:
	m1 : int = a.a
	m2 : real = b.a + c1
	m3 : bool = c == A
	m4 : bool = d == D
	
	m5 : bool = t.a 

Assumptions:
	a0: m1 > 0
	a1: m2 > 0.0

DerivedRequirements:
	dr0: x equal to m1 + a.b
	dr1: y equal to m2 + b.b
	
Requirements:
	p0: (x > 0) and (y > 0.0)
