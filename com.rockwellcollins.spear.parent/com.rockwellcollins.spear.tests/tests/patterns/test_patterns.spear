Specification test_patterns

Patterns:
	pattern gt (a : int, b : int) returns (x : bool)
	let
		x = a > b
	tel
	
	pattern eq0(a : int) returns (x : bool)
	var
		p1 : bool
	let
		x = a == 0
		p1 = x implies not gt(a,0)
	tel
	
	pattern gt_0 (a : int) returns (x : bool)
	let
		x = gt(a,0)
	tel
	
	pattern gteq0 (a : int) returns (x : bool)
	var
		p1 : bool
		p2 : bool
	let
		x = gt_0(a) or eq0(a)
		
		p1 = x implies not (a < 0) 
		p2 = not (a < 0)
		
		--%PROPERTY p1
		--%PROPERTY p2
	tel	

Inputs:
	a : int
	b : int
	c : int

Outputs:
	x : int
	y : int

Assumptions:
	a0: gteq0(a)
	a1: gt_0(b) and gt(c,0)

Requirements:
	dr0: x >= a + 1
	dr1: y >= b + 1

Guarantees:
	p0: eq0(x)
	p1: gteq0(y) or gt_0(x+y)

